<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * AccountRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AccountRepository extends EntityRepository
{
    public function findAllAccounts($id)
    {
        $em = $this->getEntityManager();
        $dql = $em->createQueryBuilder();
        $dql->select( 'a.id','a.status')
            ->from('AppBundle:Account', 'a')
            ->where('a.user = :id')
            ->andWhere('a.checkin >= :db')
            ->orderBy('a.id','desc');

        $dql->setParameter('id', $id);
        $dql->setParameter('db', new \DateTime('-12 hours'));

        return $dql->getQuery()->getResult();
    }

    public function findAllAccountsByDate($id)
    {
        $em = $this->getEntityManager();
        $dql = $em->createQueryBuilder();
        $dql->select( 'a.id','a.name','a.checkin','a.status')
            ->from('AppBundle:Account', 'a')
            ->where('a.user = :id')
            ->andWhere('a.checkin >= :db')
            ->andWhere('a.checkin < :da')
            ->orderBy('a.id','desc');

        $dql->setParameter('id', $id);
        $dql->setParameter('db', new \DateTime('-12 hours'));
        $dql->setParameter('da', new \DateTime('+12 hours'));

        return $dql->getQuery()->getResult();
    }

    public function findAccountByUserId($accountId, $userId)
    {
        $em = $this->getEntityManager();
        $dql = $em->createQueryBuilder();
        $dql->select('a.id as account', 'concat(u.name, \' \', u.firstLastName) as waiter', 'n.numberNote')
            ->from('AppBundle:Note', 'n')
            ->innerJoin('n.account', 'a')
            ->innerJoin('a.user', 'u')
            ->where('n.status = \'Entregado\'')
            ->andWhere('a.id = :accountId')
            ->andWhere('a.user = :userId');

        $dql->setParameter('accountId', $accountId);
        $dql->setParameter('userId', $userId);

        return $dql->getQuery()->getResult();
    }

    public function findDetailsByAccountId($accountId, $userId)
    {
        $em = $this->getEntityManager();
        $dql = $em->createQueryBuilder();
        $dql->select('p.name', 'p.price', 'sum(np.amount) as amount')
            ->from('AppBundle:NoteProduct', 'np')
            ->innerJoin('np.product', 'p')
            ->innerJoin('np.note', 'n')
            ->innerJoin('n.account', 'a')
            ->where('n.status = \'Entregado\'')
            ->andWhere('a.id = :accountId')
            ->andWhere('a.user = :userId')
            ->andWhere('p.price > 0')
            ->groupBy('p.id');

        $dql->setParameter('accountId', $accountId);
        $dql->setParameter('userId', $userId);

        return $dql->getQuery()->getResult();
    }
}